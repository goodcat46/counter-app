{"version":3,"file":"static/js/166.e6b35f63.chunk.js","mappings":"kSACA,GAAgB,UAAY,gCAAgC,QAAU,+B,SCqFtE,EA5EqB,WACnB,IAAMA,EAAkB,CACtB,CACEC,OAAQA,EAAAA,GAAAA,OACRC,WAAY,kBAAM,yBAAK,kCAAW,GAEpC,CACED,OAAQA,EAAAA,GAAAA,UACRC,WAAY,kBAAM,yBAAK,gEAAgB,IAGrCC,EAAmB,CACvB,CACEF,OAAQA,EAAAA,GAAAA,KACRC,WAAYE,EAAAA,GAEd,CACEH,OAAQA,EAAAA,GAAAA,KACRC,WAAYG,EAAAA,EACZC,gBAAiB,CACfC,kBAAmB,SAAAC,GACjBC,QAAQC,IAAIF,EACd,EACAA,KAAM,CAAEG,IAAK,MAGjB,CACEV,OAAQA,EAAAA,GAAAA,KACRC,WAAYG,EAAAA,EACZC,gBAAiB,CACfM,kBAAmB,SAAAJ,GACjBC,QAAQC,IAAIF,EACd,EACAA,KAAM,CAAEG,IAAK,MAGjB,CACEV,OAAQA,EAAAA,GAAAA,SAGZ,OACE,+BACE,iBAAKY,UAAW,CAACC,EAAAA,UAAa,SAASC,KAAK,KAAK,WAC/C,gBAAKF,UAAWC,EAAAA,QAAU,SACvBd,EAAgBgB,KAAI,gBAAGf,EAAM,EAANA,OAAO,EAAD,EAAEC,WAAAA,OAAU,MAAG,WAAO,EAAC,MAAEI,gBAAAA,OAAe,MAAG,KAAI,SAC3E,SAACW,EAAA,EAAY,CAEXC,QAAS,SAAAC,GAAK,OACZ,SAACC,EAAA,GAAM,gBAACC,KAAK,QAAQC,QAAQ,YAAeH,GAAK,cAC/C,SAACI,EAAA,EAAO,CAAOtB,OAAAA,MACR,EACT,UAEF,SAACC,GAAU,UAAKI,KAPXL,EAQQ,OAGnB,gBAAKY,UAAWC,EAAAA,QAAU,SACvBX,EAAiBa,KAAI,gBAAGf,EAAM,EAANA,OAAO,EAAD,EAAEC,WAAAA,OAAU,MAAG,WAAO,EAAC,MAAEI,gBAAAA,OAAe,MAAG,KAAI,SAC5E,SAACW,EAAA,EAAY,CAEXC,QAAS,SAAAC,GAAK,OACZ,SAACC,EAAA,GAAM,gBAACC,KAAK,QAAQC,QAAQ,YAAeH,GAAK,cAC/C,SAACI,EAAA,EAAO,CAAOtB,OAAAA,MACR,EACT,UAEF,SAACC,GAAU,UAAKI,KAPXL,EAQQ,UAM3B,ECnFA,EAAmC,2CC+BnC,EAxByB,WACvB,IAAMuB,GAAoBC,EAAAA,EAAAA,IAAYC,EAAAA,IACtC,GAAoCC,EAAAA,EAAAA,UAAS,MAAK,eAA3CC,EAAU,KAAEC,EAAa,KAKhC,IAAMC,EAAgB,CACpBC,aAA8B,OAAjBP,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBO,cAAe,GAC/CC,WAA4B,OAAjBR,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBS,eAAgB,GAC9CC,WANF,SAAoB1B,GAClBqB,EAAcD,EAChB,EAKEO,cAAAA,EAAAA,GACAC,iBAAkB,kBAAM,SAAC,EAAY,GAAG,GAG1C,OACE,+BACE,gBAAKvB,UAAWC,EAAmB,UACjC,SAACuB,EAAA,GAAS,UAAKP,OAIvB,C","sources":["webpack://counter-app/./src/components/TableList/TableActions/TableActions.module.scss?05a8","components/TableList/TableActions/TableActions.jsx","webpack://counter-app/./src/components/AppPages/PageTransactions/PageTransactions.module.scss?4b67","components/AppPages/PageTransactions/PageTransactions.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TableActions_container__3VwLT\",\"actions\":\"TableActions_actions__-BKWW\"};","import { Button } from '@mui/material';\nimport FormTransaction from 'components/FormTransaction/FormTransaction';\nimport CreateTransactionComp from 'components/CreateTransactionComp/CreateTransactionComp';\nimport ModalContent from 'components/ModalContent/ModalContent';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport React from 'react';\nimport { iconId } from 'data';\n\nimport s from './TableActions.module.scss';\n\nconst TableActions = () => {\n  const leftSideActions = [\n    {\n      iconId: iconId.search,\n      RenderItem: () => <div>Пошук</div>,\n    },\n    {\n      iconId: iconId.filterOff,\n      RenderItem: () => <div>Фільтрація</div>,\n    },\n  ];\n  const rightSideActions = [\n    {\n      iconId: iconId.plus,\n      RenderItem: CreateTransactionComp,\n    },\n    {\n      iconId: iconId.copy,\n      RenderItem: FormTransaction,\n      renderItemProps: {\n        onCopyTransaction: data => {\n          console.log(data);\n        },\n        data: { _id: '' },\n      },\n    },\n    {\n      iconId: iconId.edit,\n      RenderItem: FormTransaction,\n      renderItemProps: {\n        onEditTransaction: data => {\n          console.log(data);\n        },\n        data: { _id: '' },\n      },\n    },\n    {\n      iconId: iconId.delete,\n    },\n  ];\n  return (\n    <>\n      <div className={[s.container, 'theme'].join(' ')}>\n        <div className={s.actions}>\n          {leftSideActions.map(({ iconId, RenderItem = () => {}, renderItemProps = null }) => (\n            <ModalContent\n              key={iconId}\n              trigger={props => (\n                <Button size=\"small\" variant=\"outlined\" {...props}>\n                  <SvgIcon {...{ iconId }} />\n                </Button>\n              )}\n            >\n              <RenderItem {...renderItemProps} />\n            </ModalContent>\n          ))}\n        </div>\n        <div className={s.actions}>\n          {rightSideActions.map(({ iconId, RenderItem = () => {}, renderItemProps = null }) => (\n            <ModalContent\n              key={iconId}\n              trigger={props => (\n                <Button size=\"small\" variant=\"outlined\" {...props}>\n                  <SvgIcon {...{ iconId }} />\n                </Button>\n              )}\n            >\n              <RenderItem {...renderItemProps} />\n            </ModalContent>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TableActions;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactionsPage\":\"PageTransactions_transactionsPage__ToBG6\"};","import React, { useState } from 'react';\nimport TableList from 'components/TableList/TableList';\nimport { useSelector } from 'react-redux';\nimport { transactionsSelector } from 'redux/selectors.store';\nimport { createRowData } from 'data/transactions.data';\nimport TableActions from '../../TableList/TableActions/TableActions';\nimport s from './PageTransactions.module.scss';\n\nconst PageTransactions = () => {\n  const transactionsState = useSelector(transactionsSelector);\n  const [selectedTr, setSelectedTr] = useState(null);\n\n  function onRowClick(data) {\n    setSelectedTr(selectedTr);\n  }\n  const tableSettings = {\n    tableTitles: transactionsState?.tableTitles || [],\n    tableData: transactionsState?.transactions || [],\n    onRowClick,\n    createRowData,\n    TableActionsComp: () => <TableActions />,\n  };\n\n  return (\n    <>\n      <div className={s.transactionsPage}>\n        <TableList {...tableSettings} />\n      </div>\n    </>\n  );\n};\n\nexport default PageTransactions;\n"],"names":["leftSideActions","iconId","RenderItem","rightSideActions","CreateTransactionComp","FormTransaction","renderItemProps","onCopyTransaction","data","console","log","_id","onEditTransaction","className","s","join","map","ModalContent","trigger","props","Button","size","variant","SvgIcon","transactionsState","useSelector","transactionsSelector","useState","selectedTr","setSelectedTr","tableSettings","tableTitles","tableData","transactions","onRowClick","createRowData","TableActionsComp","TableList"],"sourceRoot":""}